.box-brand-bnr {
  width: 100%;
  text-align: center;
  background-color: #f8f8f8;
  padding: 30px;
  font-weight: bold;
}

@media screen and (min-width: 768px) {
  .box-brand-bnr {
    padding: 48px 0 64px;
  }
}

@media screen and (min-width: 768px) {
  .box-brand-bnr .box-brand-bnr-in {
    max-width: 1140px;
    height: auto;
    margin: 0 auto;
  }
}

.box-brand-bnr .ttl {
  font-size: 1.6rem;
  font-weight: bold;
  margin-bottom: 24px;
}

@media screen and (min-width: 768px) {
  .box-brand-bnr .ttl {
    font-size: 2.4rem;
    margin-bottom: 15px;
  }
}

@media screen and (min-width: 768px) {
  .box-brand-bnr p {
    font-size: 1.4rem;
  }
}

.box-brand-bnr .list {
  letter-spacing: -.4em;
}

.box-brand-bnr .list li {
  letter-spacing: normal;
  display: inline-block;
  max-width: 50%;
  margin: 29px 0 0;
}

@media screen and (min-width: 768px) {
  .box-brand-bnr .list li {
    width: 33.3%;
    margin: 90px 0 0;
  }
}

.box-brand-bnr .list li a {
  display: inline-block;
}

.box-brand-bnr .list li a img {
  width: 100%;
  height: auto;
  vertical-align: middle;
}

@media screen and (min-width: 768px) {
  .box-brand-bnr .list li:not(:first-child) {
    margin-left: 10%;
  }
}

.box-brand-bnr .list .box-01 {
  max-width: 120px;
  width: 47%;
}

@media screen and (min-width: 768px) {
  .box-brand-bnr .list .box-01 {
    max-width: 200px;
  }
}

.box-brand-bnr .list .box-02 {
  max-width: 138px;
  width: 47%;
  margin-left: 3%;
}

@media screen and (min-width: 768px) {
  .box-brand-bnr .list .box-02 {
    max-width: 211px;
  }
}

.box-brand-bnr .list .box-03 {
  display: block;
  margin: 20px auto 0;
  max-width: 138px;
}

@media screen and (min-width: 768px) {
  .box-brand-bnr .list .box-03 {
    display: inline-block;
    max-width: 207px;
  }
}

.grid-image::before, .grid-image::after {
  content: "";
  display: table;
}

.grid-image::after {
  clear: both;
}

.grid-image .col-01 {
  width: 100%;
}

.grid-image .col-01 figure img {
  width: 100%;
  height: auto;
}

.grid-image .col-02 {
  width: 100%;
}

@media screen and (min-width: 768px) {
  .grid-image .col-02 {
    float: left;
    width: calc(50% - 40px);
  }
}

.grid-image .col-02 figure img {
  width: 100%;
  height: auto;
}

@media screen and (min-width: 768px) {
  .grid-image .col-02:nth-child(even) {
    margin-left: 80px;
  }
}

.grid-image .col-03 {
  width: 100%;
}

@media screen and (min-width: 768px) {
  .grid-image .col-03 {
    float: left;
    width: calc(33.3% - 60px);
  }
}

.grid-image .col-03 figure img {
  width: 100%;
  height: auto;
}

@media screen and (min-width: 768px) {
  .grid-image .col-03:not(:nth-child(3n+1)) {
    margin-left: 80px;
  }
}

.mod-img-fl::before, .mod-img-fl::after {
  content: "";
  display: table;
}

.mod-img-fl::after {
  clear: both;
}

.mod-img-fl.left figure img {
  float: left;
  margin-right: 14px;
}

@media screen and (min-width: 768px) {
  .mod-img-fl.left figure img {
    margin-right: 58px;
  }
}

.mod-img-fl.right figure img {
  float: right;
  margin-left: 14px;
}

@media screen and (min-width: 768px) {
  .mod-img-fl.right figure img {
    margin-left: 58px;
  }
}

.mod-img-fl figure {
  overflow: hidden;
}

.mod-img-fl figure img {
  width: 50%;
  height: auto;
}

@media screen and (min-width: 768px) {
  .mod-img-fl figure img {
    max-width: 320px;
    width: 100%;
  }
}

.mod-img-fl figure figcaption {
  overflow: hidden;
}

.mod-img-fl figure figcaption p + p {
  margin-top: 20px;
}

.mod-img-fl-r::before, .mod-img-fl-r::after {
  content: "";
  display: table;
}

.mod-img-fl-r::after {
  clear: both;
}

.mod-img-fl-r figure {
  overflow: hidden;
}

.mod-img-fl-r figure img {
  float: right;
  max-width: 320px;
  width: 100%;
  height: auto;
  margin-right: 58px;
}

.mod-img-fl-r figure figcaption {
  overflow: hidden;
}

.mod-img-fl-r figure figcaption p + p {
  margin-top: 20px;
}

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
